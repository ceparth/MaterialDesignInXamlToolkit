<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf">
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type Button}" x:Key="MaterialDesignOverSizedNumberSpinnerButton">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignOverSizedNumberSpinnerButton}" x:Key="MaterialDesignOverSizedNumberSpinnerPlusButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="5,5,0,0">
                        <wpf:Ripple Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Focusable="False" Feedback="White"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Padding="{TemplateBinding Padding}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignOverSizedNumberSpinnerButton}" x:Key="MaterialDesignOverSizedNumberSpinnerMinusButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="0,0,5,5">
                        <wpf:Ripple Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Focusable="False" Feedback="White"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Padding="{TemplateBinding Padding}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type wpf:OversizedNumberSpinner}">
        <Setter Property="Height" Value="70" />
        <Setter Property="Width" Value="55" />
        <Setter Property="ClipToBounds" Value="False" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
        <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type wpf:OversizedNumberSpinner}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="PlusAnimation">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ValueTextBlock" Storyboard.TargetProperty="FontSize">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="26" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="20" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="MinusAnimation">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ValueTextBlock" Storyboard.TargetProperty="FontSize">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="14" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="20" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="25*" />
                            <RowDefinition Height="25*" />
                            <RowDefinition Height="0.5" />
                            <RowDefinition Height="25*" />
                            <RowDefinition Height="25*" />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="3" Background="{DynamicResource MaterialDesignSeperator}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                        <Button Grid.RowSpan="2" Style="{StaticResource MaterialDesignOverSizedNumberSpinnerPlusButton}"
                                Background="{TemplateBinding Background}"
                                Command="{x:Static wpf:OversizedNumberSpinner.PlusCommand}">
                            <Viewbox>
                                <Canvas Width="24" Height="35">
                                    <Path Data="M7.41,15.41L12,10.83L16.59,15.41L18,14L12,8L6,14L7.41,15.41Z" SnapsToDevicePixels="True"
                                          Fill="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground}"
                                          Stroke="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground}">
                                    </Path>
                                </Canvas>
                            </Viewbox>
                            <Button.Triggers>
                                <EventTrigger RoutedEvent="Button.Click">
                                    <BeginStoryboard Storyboard="{StaticResource PlusAnimation}" />
                                </EventTrigger>
                            </Button.Triggers>
                        </Button>
                        <Button Grid.Row="3" Grid.RowSpan="2" x:Name="PlusButton" Style="{StaticResource MaterialDesignOverSizedNumberSpinnerMinusButton}"
                                Background="{TemplateBinding Background}"
                                Command="{x:Static wpf:OversizedNumberSpinner.MinusCommand}">
                            <Viewbox HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <Canvas Width="24" Height="35" RenderTransformOrigin="0.5, 0.5">
                                    <Canvas.RenderTransform>
                                        <RotateTransform Angle="180" />
                                    </Canvas.RenderTransform>
                                    <Path Data="M7.41,15.41L12,10.83L16.59,15.41L18,14L12,8L6,14L7.41,15.41Z" SnapsToDevicePixels="True"
                                          Fill="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground}"
                                          Stroke="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground}">
                                    </Path>
                                </Canvas>
                            </Viewbox>
                            <Button.Triggers>
                                <EventTrigger RoutedEvent="Button.Click">
                                    <BeginStoryboard Storyboard="{StaticResource MinusAnimation}" />
                                </EventTrigger>
                            </Button.Triggers>
                        </Button>
                        <TextBlock Grid.Row="1" Grid.RowSpan="3" x:Name="ValueTextBlock" FontSize="20" Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground}"
                                   HorizontalAlignment="Center" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value}" VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>